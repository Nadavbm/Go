package main

import (
	"html/template"
	"net/http"
	"log"
)

type Person struct {
	Name 	string
}

func about(w http.ResponseWriter, req *http.Request) {
	if req.URL.Path != "/about.html" {
        log.Printf("404: %s", req.URL.String())
        http.NotFound(w, req)
        return
    }
    http.ServeFile(w, req, "about.html")
}

func index(w http.ResponseWriter, req *http.Request) {
	if req.URL.Path != "/" {
	log.Printf("404: %s", req.URL.String())
        http.NotFound(w, req)
        return
    }
    tmpl := template.Must(template.ParseFiles("index.html"))
    if req.Method != http.MethodPost {
	tmpl.Execute(w, nil)
	return
    }
    details := Person{Name: req.FormValue("name"),
		}

    // do something with details
    _ = details
    tmpl.Execute(w, struct{ Success bool }{true})
    http.ServeFile(w, req, "index.html")
}


func main() {
	http.HandleFunc("/templates", index)
	http.HandleFunc("/about", about)
	http.ListenAndServe(":80", http.HandlerFunc(index))
}
